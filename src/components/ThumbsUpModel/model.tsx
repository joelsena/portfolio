/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
    nodes: {
        Hand: THREE.Mesh
        Sleeve: THREE.Mesh
    }
    materials: {
        Hand: THREE.MeshStandardMaterial
        Sleeve: THREE.MeshStandardMaterial
    }
}

export function ThumbsUpModel({ ...props }: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>()
    const { nodes, materials } = useGLTF(
        '/3DModels/thumbsUpModel.gltf'
    ) as GLTFResult

    useFrame(state => {
        const t = state.clock.getElapsedTime()

        group.current.position.y = Math.sin(t) * 0.25 - 2.5
        group.current.rotation.x = Math.sin(t) * 0.15 - 0.025
    })

    return (
        <group ref={group} {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]} scale={1}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Hand.geometry}
                    material={materials.Hand}
                    position={[-67.23, 23.93, 31.59]}
                    rotation={[Math.PI / 2, 0, Math.PI / 2]}
                    scale={3}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Sleeve.geometry}
                    material={materials.Sleeve}
                    position={[-67.23, 23.93, 31.59]}
                    rotation={[Math.PI / 2, 0, Math.PI / 2]}
                    scale={3}
                />
            </group>
        </group>
    )
}

useGLTF.preload('/3DModels/thumbsUpModel.gltf')
